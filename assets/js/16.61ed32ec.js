(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{405:function(_,v,t){"use strict";t.r(v);var e=t(54),r=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"tcp-udp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-udp"}},[_._v("#")]),_._v(" TCP/UDP")]),_._v(" "),t("h3",{attrs:{id:"网络通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络通信"}},[_._v("#")]),_._v(" 网络通信")]),_._v(" "),t("ol",[t("li",[_._v("物理层")]),_._v(" "),t("li",[_._v("数据链路层")]),_._v(" "),t("li",[_._v("网络层")]),_._v(" "),t("li",[_._v("传输层"),t("code",[_._v("TCP/UDP")])]),_._v(" "),t("li",[_._v("会话层")]),_._v(" "),t("li",[_._v("表示层")]),_._v(" "),t("li",[_._v("应用层")])]),_._v(" "),t("h3",{attrs:{id:"tcp-基于连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-基于连接"}},[_._v("#")]),_._v(" TCP 基于连接")]),_._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6",target:"_blank",rel:"noopener noreferrer"}},[_._v("TCP拥塞控制"),t("OutboundLink")],1)])]),_._v(" "),t("ol",[t("li",[t("p",[_._v("三次握手")]),_._v(" "),t("ol",[t("li",[_._v("客户端发送 "),t("code",[_._v("SYN")]),_._v(" 包到服务端并进入 "),t("code",[_._v("SYN-SEND")]),_._v(" 状态（第一次🤝）")]),_._v(" "),t("li",[_._v("服务端同意连接则回复 "),t("code",[_._v("SYN+ACK")]),_._v(" 包并进入 "),t("code",[_._v("SYN-RCVD")]),_._v(" 状态（第二次🤝）")]),_._v(" "),t("li",[_._v("客户端收到后回复 "),t("code",[_._v("ACK")]),_._v(" 包并进入 "),t("code",[_._v("ESTABLISHED")]),_._v(" 状态（第三次🤝）")]),_._v(" "),t("li",[_._v("服务端收到后进入 "),t("code",[_._v("ESTABLISHED")]),_._v(" 状态，建立连接")])]),_._v(" "),t("hr"),_._v(" "),t("ul",[t("li",[_._v("第三次握手的必要性？\n"),t("ul",[t("li",[_._v("??? 为了防止已失效的报文突然传送到服务端引起错误，解决网络信道不可靠的问题。")])])])]),_._v(" "),t("hr")]),_._v(" "),t("li",[t("p",[_._v("传输确认")]),_._v(" "),t("ul",[t("li",[_._v("丢包问题 & 乱序问题\n"),t("ul",[t("li",[_._v("TCP协议为每一个连接建立了发送缓冲区，建立连接后的第一个字节序列号为0，后面每个字节的序列号+1，发送数据时从缓冲区取出一部分数据组成发送报文，在TCP协议头中会附带”序列号和长度“，接受端收到后回复的 ACK 包包含了接收的”序列号和长度“也就是下一包数据的起始序列号。")]),_._v(" "),t("li",[_._v("接收端收到后根据”序列号和长度“重组数据包，如果有丢失可以重发一个 ACK 包到发送端要求发送端重发。")])])])]),_._v(" "),t("hr")]),_._v(" "),t("li",[t("p",[_._v("四次挥手")]),_._v(" "),t("ol",[t("li",[_._v("客户端发送 FIN 包，表示要关闭连接并进入 FIN-WAIT-1 状态（第一次👋）")]),_._v(" "),t("li",[_._v("服务端收到后回复 ACK 包并进入 CLOSED-WAIT 状态（第二次👋）")]),_._v(" "),t("li",[_._v("客户端收到 ACK 包并进入 FIN-WAIT-2 状态")]),_._v(" "),t("li",[_._v("服务端确认数据已发送完毕后发送 FIN 包并进入 LAST-ACK 状态（第三次👋）")]),_._v(" "),t("li",[_._v("客户端收到后回复 ACK 包并进入 TIME-WAIT 状态经过超时时间后关闭连接并进入 CLOSED 状态（第四次👋）")]),_._v(" "),t("li",[_._v("服务端收到 ACK 包后立即进入 CLOSED 状态")])]),_._v(" "),t("hr"),_._v(" "),t("ul",[t("li",[_._v("为什么需要 TIME-WAIT 状态？\n"),t("ul",[t("li",[_._v("为了保证对端收到发送的 ACK 包，如果没有超时时间直接关闭连接，当 ACK 包丢失时对端将保持 LAST-ACK 状态无法关闭连接。有超时时间时对端如果未接收到 ACK 包会重发 FIN 包，客户端响应后重发 ACK 包同时刷新超时时间解决这个问题。")])])])]),_._v(" "),t("hr")])]),_._v(" "),t("h3",{attrs:{id:"udp-基于非连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#udp-基于非连接"}},[_._v("#")]),_._v(" UDP 基于非连接")]),_._v(" "),t("ol",[t("li",[_._v("稳定性差，可能造成丢包")]),_._v(" "),t("li",[_._v("速度快")]),_._v(" "),t("li",[_._v("隧道网络，如 VPN")])]),_._v(" "),t("h2",{attrs:{id:"http"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[_._v("#")]),_._v(" HTTP")]),_._v(" "),t("h3",{attrs:{id:"http-1-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1"}},[_._v("#")]),_._v(" HTTP/1.1")]),_._v(" "),t("h3",{attrs:{id:"http-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-2"}},[_._v("#")]),_._v(" HTTP/2")]),_._v(" "),t("p",[_._v("在单个"),t("code",[_._v("TCP")]),_._v("连接上使用了"),t("code",[_._v("多路复用")])]),_._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8",target:"_blank",rel:"noopener noreferrer"}},[_._v("多路复用"),t("OutboundLink")],1)]),_._v(" "),t("li",[t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E9%98%9F%E5%A4%B4%E9%98%BB%E5%A1%9E",target:"_blank",rel:"noopener noreferrer"}},[_._v("队头阻塞"),t("OutboundLink")],1)])]),_._v(" "),t("h3",{attrs:{id:"http-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-3"}},[_._v("#")]),_._v(" HTTP/3")]),_._v(" "),t("ul",[t("li",[_._v("为了解决"),t("code",[_._v("HTTP/2")]),_._v("中存在的"),t("code",[_._v("队头阻塞")]),_._v("问题")]),_._v(" "),t("li",[_._v("QUIC")])]),_._v(" "),t("h2",{attrs:{id:"其它"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[_._v("#")]),_._v(" 其它")]),_._v(" "),t("h3",{attrs:{id:"浏览器请求并发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器请求并发"}},[_._v("#")]),_._v(" 浏览器请求并发")]),_._v(" "),t("p",[t("code",[_._v("Chrome")]),_._v("/"),t("code",[_._v("Firefox")]),_._v("单个域名只能并发请求 6 个资源。")]),_._v(" "),t("ol",[t("li",[t("code",[_._v("Chrome")]),_._v(" 的并发请求数量是不能修改的，因为已经固定写到源码中了，具体可以"),t("a",{attrs:{href:"https://chromium.googlesource.com/chromium/src/+/65.0.3325.162/net/socket/client_socket_pool_manager.cc#44",target:"_blank",rel:"noopener noreferrer"}},[_._v("查看"),t("OutboundLink")],1),_._v("。")]),_._v(" "),t("li",[t("code",[_._v("Firefox")]),_._v(" 可以修改，首先在地址栏输入 "),t("code",[_._v("about:config")]),_._v("，搜索 "),t("code",[_._v("http.max")]),_._v(" 关键字，"),t("code",[_._v("network.http.max-connections")]),_._v(" 为全局 "),t("code",[_._v("HTTP")]),_._v(" 同时最大的连接数量，默认为 "),t("code",[_._v("900")]),_._v("；"),t("code",[_._v("network.http.max-persistent-connections-per-server")]),_._v(" 为单个域名最大链接数量，默认为 "),t("code",[_._v("6")]),_._v("，双击此列可以进行修改。")])])])}),[],!1,null,null,null);v.default=r.exports}}]);